[
  {
    "Lab scenario": "File path traversal, simple case",
    "Lab Description": "This lab contains a path traversal vulnerability in the display of product images.\nTo solve the lab, retrieve the contents of the /etc/passwd file.",
    "Vulnerability name": "Path traversal",
    "lab level": "easy",
    "src code": "require('express')().get('/image', (req, res) => require('fs').readFile(__dirname + '/' + req.query.file, 'utf8', (err, data) => err ? res.status(500).send('Error loading file') : res.send(`<pre>${data}</pre>`))).listen(3000, () => console.log('Lab running on http://localhost:3000'));"
  },
  {
    "Lab scenario": "File path traversal, traversal sequences blocked with absolute path bypass",
    "Lab Description": "This lab contains a path traversal vulnerability in the display of product images.\nThe application blocks traversal sequences but treats the supplied filename as being relative to a default working directory.\nTo solve the lab, retrieve the contents of the /etc/passwd file.",
    "Vulnerability name": "Path traversal",
    "lab level": "medium",
    "src code": "const express = require('express'); const fs = require('fs'); const app = express(); app.get('/image', (req, res) => { const filePath = '/var/www/images/' + req.query.file; fs.readFile(filePath, 'utf8', (err, data) => { if (err) { return res.status(500).send('Error loading file'); } res.send(`<pre>${data}</pre>`); }); }); app.listen(3000, () => console.log('Lab running on http://localhost:3000'));"
  },
  {
    "Lab scenario": "File path traversal, traversal sequences stripped non-recursively",
    "Lab Description": "This lab contains a path traversal vulnerability in the display of product images.\nThe application strips path traversal sequences from the user-supplied filename before using it.\nTo solve the lab, retrieve the contents of the /etc/passwd file.",
    "Vulnerability name": "Path traversal",
    "lab level": "medium",
    "src code": "const express = require('express');const fs = require('fs');const path = require('path');const app = express();app.get('/image', (req, res) => {let filePath = req.query.file.replace(/(\\.\\.\\/|\\\\)/g, ''); filePath = path.join(__dirname, 'images', filePath); fs.readFile(filePath, 'utf8', (err, data) => {if (err) { return res.status(500).send('Error loading file');}res.send(`<pre>${data}</pre>`);});});app.listen(3000, () => console.log('Lab running on http://localhost:3000'));"
  },
  {
    "Lab scenario": "File path traversal, traversal sequences stripped with superfluous URL-decode",
    "Lab Description": "This lab contains a path traversal vulnerability in the display of product images.\nThe application blocks input containing path traversal sequences. It then performs a URL-decode of the input before using it.\nTo solve the lab, retrieve the contents of the /etc/passwd file.",
    "Vulnerability name": "Path traversal",
    "lab level": "medium",
    "src code": "const express=require('express');const fs=require('fs');const path=require('path');const app=express();app.get('/image',(req,res)=>{let filePath=decodeURIComponent(req.query.file).replace(/(\\\\.\\\\\\/|\\\\\\\\\\\\/)/g,'');filePath=path.join(__dirname,'images',filePath);fs.readFile(filePath,'utf8',(err,data)=>{if(err){return res.status(500).send('Error loading file');}res.send(`<pre>${data}</pre>`);});});app.listen(3000,()=>console.log('Lab running on http://localhost:3000'));"
  },
  {
    "Lab scenario": "File path traversal, validation of start of path",
    "Lab Description": "This lab contains a path traversal vulnerability in the display of product images.\nThe application transmits the full file path via a request parameter, and validates that the supplied path starts with the expected folder.\nTo solve the lab, retrieve the contents of the /etc/passwd file.",
    "Vulnerability name": "Path traversal",
    "lab level": "hard",
    "src code": "const express=require('express'),fs=require('fs'),path=require('path'),app=express();app.get('/image',(req,res)=>{const basePath=path.join(__dirname,'images');console.log(basePath);let filePath=path.normalize(req.query.file);console.log(filePath);if(!filePath.startsWith(basePath)){return res.status(403).send('Access denied');}filePath=path.join(basePath,path.basename(filePath));fs.readFile(filePath,'utf8',(err,data)=>{if(err){console.error('Error:',err.message);return res.status(500).send('Error loading file');}res.send(`<pre>${data}</pre>`);});});app.listen(3000,()=>console.log('Lab running on http://localhost:3000'));"
  },
  {
    "Lab scenario": "File path traversal, validation of file extension with null byte bypass",
    "Lab Description": "This lab contains a path traversal vulnerability in the display of product images.\nThe application validates that the supplied filename ends with the expected file extension.\nTo solve the lab, retrieve the contents of the /etc/passwd file.",
    "Vulnerability name": "Path traversal",
    "lab level": "medium",
    "src code": "const express=require('express');const fs=require('fs');const path=require('path');const app=express();app.get('/image',(req,res)=>{let filePath=req.query.file.replace(/(\\\\.\\/|\\\\\\\\)/g,'');filePath=path.join(__dirname,'images',filePath);fs.readFile(filePath,'utf8',(err,data)=>{if(err){return res.status(500).send('Error loading file');}res.send(`<pre>${data}</pre>`);});});app.listen(3000,()=>console.log('Lab running on http://localhost:3000'));"
  }
    
]