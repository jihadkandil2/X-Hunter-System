[
    {
        "Lab scenario": "Exploiting XXE using external entities to retrieve files",
        "Lab Description": "This lab has a \"Check stock\" feature that parses XML input and returns any unexpected values in the response.\nTo solve the lab, inject an XML external entity to retrieve the contents of the /etc/passwd file.",
        "Vulnerability name": "XML external entity (XXE) injection",
        "src code": "<?xml version=\"1.0\"?>\n<!DOCTYPE foo [ <!ENTITY xxe SYSTEM \"file:///etc/passwd\"> ]>\n<stockCheck><productId>&xxe;</productId></stockCheck>",
        "lab level": "Intermediate"
      },
      {
        "Lab scenario": "Exploiting XXE to perform SSRF attacks",
        "Lab Description": "This lab has a \"Check stock\" feature that parses XML input and returns any unexpected values in the response.\nThe lab server is running a (simulated) EC2 metadata endpoint at the default URL, which is http://169.254.169.254/. This endpoint can be used to retrieve data about the instance, some of which might be sensitive.\nTo solve the lab, exploit the XXE vulnerability to perform an SSRF attack that obtains the server's IAM secret access key from the EC2 metadata endpoint.",
        "Vulnerability name": "XML external entity (XXE) injection"
      },
      {
        "Lab scenario": "Blind XXE with out-of-band interaction",
        "Lab Description": "This lab has a \"Check stock\" feature that parses XML input but does not display the result.\nYou can detect the blind XXE vulnerability by triggering out-of-band interactions with an external domain.\nTo solve the lab, use an external entity to make the XML parser issue a DNS lookup and HTTP request to Burp Collaborator.",
        "Vulnerability name": "XML external entity (XXE) injection"
      },
      {
        "Lab scenario": "Blind XXE with out-of-band interaction via XML parameter entities",
        "Lab Description": "This lab has a \"Check stock\" feature that parses XML input, but does not display any unexpected values, and blocks requests containing regular external entities.\nTo solve the lab, use a parameter entity to make the XML parser issue a DNS lookup and HTTP request to Burp Collaborator.",
        "Vulnerability name": "XML external entity (XXE) injection"
      },
      {
        "Lab scenario": "Exploiting blind XXE to exfiltrate data using a malicious external DTD",
        "Lab Description": "This lab has a \"Check stock\" feature that parses XML input but does not display the result.\nTo solve the lab, exfiltrate the contents of the /etc/hostname file.",
        "Vulnerability name": "XML external entity (XXE) injection"
      },
      {
        "Lab scenario": "Exploiting blind XXE to retrieve data via error messages",
        "Lab Description": "This lab has a \"Check stock\" feature that parses XML input but does not display the result.\nTo solve the lab, use an external DTD to trigger an error message that displays the contents of the /etc/passwd file.\nThe lab contains a link to an exploit server on a different domain where you can host your malicious DTD.",
        "Vulnerability name": "XML external entity (XXE) injection"
      },
      {
        "Lab scenario": "Exploiting XInclude to retrieve files",
        "Lab Description": "This lab has a \"Check stock\" feature that embeds the user input inside a server-side XML document that is subsequently parsed.\nBecause you don't control the entire XML document you can't define a DTD to launch a classic XXE attack.\nTo solve the lab, inject an XInclude statement to retrieve the contents of the /etc/passwd file.",
        "Vulnerability name": "XML external entity (XXE) injection"
      },
      {
        "Lab scenario": "Exploiting XXE via image file upload",
        "Lab Description": "This lab lets users attach avatars to comments and uses the Apache Batik library to process avatar image files.\nTo solve the lab, upload an image that displays the contents of the /etc/hostname file after processing. Then use the \"Submit solution\" button to submit the value of the server hostname.",
        "Vulnerability name": "XML external entity (XXE) injection"
      },
      {
        "Lab scenario": "Exploiting XXE to retrieve data by repurposing a local DTD",
        "Lab Description": "This lab has a \"Check stock\" feature that parses XML input but does not display the result.\nTo solve the lab, trigger an error message containing the contents of the /etc/passwd file.\nYou'll need to reference an existing DTD file on the server and redefine an entity from it.",
        "Vulnerability name": "XML external entity (XXE) injection"
      }
]