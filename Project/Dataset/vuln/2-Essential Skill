[
    {
        "Lab scenario": "Scanning non-standard data structures",
        "Lab Description": "This lab contains a vulnerability that is difficult to find manually. It is located in a non-standard data structure.\nTo solve the lab, use Burp Scanner's Scan selected insertion point feature to identify the vulnerability, then manually exploit it and delete carlos.\nYou can log in to your own account with the following credentials: wiener:peter",
        "Vulnerability name": "Essential skills",
        "lab level": "Medium",
        "src code": "const express = require('express');\nconst bodyParser = require('body-parser');\n\nconst app = express();\napp.use(bodyParser.json());\n\nconst data = { users: [{ username: 'wiener', password: 'peter' }, { username: 'carlos', password: 'secret' }] };\n\napp.post('/login', (req, res) => {\n    const { username, password } = req.body;\n    if (data.users.some(user => user.username === username && user.password === password)) {\n        res.send(`Welcome, ${username}!`);\n    } else {\n        res.send('Invalid credentials.');\n    }\n});\n\napp.listen(3000, () => console.log('Lab running on http://localhost:3000'))"
    },
    {
        "Lab scenario": "Discovering vulnerabilities quickly with targeted scanning",
        "Lab Description": "This lab contains a vulnerability that enables you to read arbitrary files from the server. To solve the lab, retrieve the contents of /etc/passwd within 10 minutes.\nDue to the tight time limit, we recommend using Burp Scanner to help you. You can obviously scan the entire site to identify the vulnerability, but this might not leave you enough time to solve the lab. Instead, use your intuition to identify endpoints that are likely to be vulnerable, then try running a targeted scan on a specific request. Once Burp Scanner has identified an attack vector, you can use your own expertise to find a way to exploit it.",
        "Vulnerability name": "Essential skills",
        "lab level": "Medium",
        "src code": "const express = require('express');\nconst fs = require('fs');\nconst app = express();\n\napp.get('/readfile', (req, res) => {\n    const file = req.query.file;\n    if (!file) return res.status(400).send('File parameter is missing.');\n    fs.readFile(file, 'utf8', (err, data) => {\n        if (err) return res.status(500).send('Error reading file.');\n        res.send(`<pre>${data}</pre>`);\n    });\n});\n\napp.listen(3000, () => console.log('Lab running on http://localhost:3000'))"
     }
]